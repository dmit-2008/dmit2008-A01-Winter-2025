// import useEffect
import { useState, useEffect } from 'react'
import Head from 'next/head'

import Box from '@mui/material/Box';
import Button from '@mui/material/Button';

import Container from '@mui/material/Container';
// import circular progress.
import CircularProgress from '@mui/material/CircularProgress';


import Navbar from '../components/Navbar';
import NewReviewForm from '../components/NewReviewForm';
import ReviewsList from '../components/ReviewsList';

import { deleteReview } from '../utils/api/reviews';
// learned exercise
import reviewsAPI from '../utils/api/reviewsAPIAsObject';


export default function Home() {
  // the stateful values.
  const [reviews, setReviews] = useState([])
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState("")


  // fetch the data.
  // and render it on the page.
  // with a function that will be triggered with the
  // load button.
  const loadReviews = async () => {
    try {
      setIsLoading(true) // we're loading here.
      // learned exercise
      const data = await reviewsAPI.get()

      setIsLoading(false) // because it's fetched.
      // set the reviews
      setReviews(data)
      setError("")
    } catch (error) {
      setError("Error making request")
    }
  }

  // I want you to disable strict mode
  // I want you to essentially create a loading state
  // show circular progress on the reviews section when it's loading.
  // maybe think a ternary
  // I want you to load the reviews in an effect on mount.
  useEffect(()=> {
    loadReviews()
  }, []) // write this so that it's on mount.



  return (
    <div>
      <Head>
        <title>Adaptation Reviews.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main>
        <Container maxWidth="md">
          <NewReviewForm
            reviews={reviews}
            setReviews={setReviews}
            loadReviews={loadReviews}
          />
          { // I can write a ternary
          // just for the circularprogress
          isLoading ?
            <CircularProgress />
          :
            <ReviewsList
              reviews={reviews}
              setReviews={setReviews}
              loadReviews={loadReviews}
            />
          }
        </Container>
      </main>
    </div>
  )
}
